version: 2
jobs:
  checkout_and_install:
    docker:
      - image: dydxprotocol/node:8.12-alpine-v1
    working_directory: ~/build
    steps:
      - checkout
      - restore_cache:
          keys:
            - dependency-cache-v1-{{ .Branch }}-{{ checksum "package-lock.json" }}
            - dependency-cache-v1-{{ .Branch }}-
            - dependency-cache-v1-
      - run:
          name: Install Dependencies
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc && npm ci
      - save_cache:
          key: dependency-cache-v1-{{ .Branch }}-{{ checksum "package-lock.json" }}
          paths:
            - "$HOME/.npm"
      - save_cache:
          key: cache-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/build
  test:
    docker:
      - image: dydxprotocol/node:8.12-alpine-v1
      - image: redis:4.0.10-alpine
      - image: dydxprotocol/protocol:v1.0.19
    working_directory: ~/build
    steps:
      - restore_cache:
          key: cache-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Test
          command: SOLO_NODE_LOAD_BALANCER=http://localhost:8548 REDIS_URL=redis://localhost:6379 npm test
  lint:
    docker:
      - image: dydxprotocol/node:8.12-alpine-v1
    working_directory: ~/build
    steps:
      - restore_cache:
          key: cache-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Lint
          command: npm run lint
  build:
    docker:
      - image: dydxprotocol/node:8.12-alpine-v1
    working_directory: ~/build
    steps:
      - restore_cache:
          key: cache-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Build
          command: npm run build
      - save_cache:
          key: cache-completed-build-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/build
  coverage:
    docker:
      - image: dydxprotocol/node:8.12-alpine-v1
      - image: redis:4.0.10-alpine
      - image: dydxprotocol/protocol:v1.0.19
    working_directory: ~/build
    steps:
      - restore_cache:
          key: cache-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Coverage
          command: SOLO_NODE_LOAD_BALANCER=http://localhost:8548 REDIS_URL=redis://localhost:6379 npm run coverage -- --coverageReporters=text-lcov | node_modules/.bin/coveralls
  version_and_build:
    docker:
      - image: dydxprotocol/node:8.12-alpine-v1
    working_directory: ~/build
    steps:
      - restore_cache:
          key: cache-completed-build-{{ .Environment.CIRCLE_SHA1 }}
      - setup_remote_docker:
          docker_layer_caching: true
      - add_ssh_keys:
          fingerprints:
            - "63:89:e0:68:0c:98:88:f6:26:6c:5c:dd:6a:58:d9:ff"
      - run:
          name: Version and Build
          command: |
            ./node_modules/@dydxprotocol/node-service-lib/scripts/version-and-build.sh
workflows:
  version: 2
  build_and_test:
    jobs:
      - checkout_and_install
      - test:
          requires:
            - checkout_and_install
      - lint:
          requires:
            - checkout_and_install
      - build:
          requires:
            - checkout_and_install
      - coverage:
          requires:
            - checkout_and_install
      - version_and_build:
          requires:
            - test
            - lint
            - build
          filters:
            branches:
              only: master
